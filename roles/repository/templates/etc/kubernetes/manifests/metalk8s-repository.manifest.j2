apiVersion: v1
kind: Pod
metadata:
  name: metalk8s-repository
  namespace: kube-system
  labels:
    heritage: MetalK8s
    app: metalk8s-repository
    component: repository
  annotations:
    checksum/config-nginx: '{{ stat_nginx.stat.checksum }}'
    checksum/config-repository: '{{ stat_registry.stat.checksum }}'
    checksum/config-docker-auth: '{{ stat_docker_auth.stat.checksum }}'
spec:
  hostNetwork: true
  containers:
    - name: nginx
      image: '{{ repository__nginx_image }}:{{ repository__nginx_tag }}'
      imagePullPolicy: Never
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          remove: ['ALL']
        readOnlyRootFilesystem: true
      volumeMounts:
      - name: nginx-config
        mountPath: /etc/nginx/conf.d/default.conf
        readOnly: true
      - name: pki
        mountPath: /etc/metalk8s/repository/pki
        readOnly: true
      - name: nginx-cache
        mountPath: /var/cache/nginx
      - name: nginx-run
        mountPath: /var/run
      - name: nginx-data
        mountPath: /usr/share/nginx/html
        readOnly: true
      ports:
      - name: http
        containerPort: {{ repository__port }}
      livenessProbe:
        httpGet:
          port: http
          scheme: HTTPS
          path: /
      readinessProbe:
        httpGet:
          port: http
          scheme: HTTPS
          path: /
    - name: registry
      image: '{{ repository__registry_image }}:{{ repository__registry_tag }}'
      imagePullPolicy: Never
      env:
      - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
        value: "/var/lib/registry"
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          remove: ['ALL']
        readOnlyRootFilesystem: true
        runAsUser: 1000
        fsGroup: 1000
      volumeMounts:
      - name: registry-config
        mountPath: /etc/docker/registry/config.yml
        readOnly: true
      - name: registry-data
        mountPath: /var/lib/registry
      - name: pki
        mountPath: /etc/metalk8s/repository/pki
        readOnly: true
      ports:
      - name: http
        containerPort: 5000
      livenessProbe:
        httpGet:
          host: '127.0.0.1'
          port: http
          path: /
      readinessProbe:
        httpGet:
          host: '127.0.0.1'
          port: http
          path: /
    - name: docker-auth
      image: '{{ repository__docker_auth_image }}:{{ repository__docker_auth_tag }}'
      args: ['-logtostderr', '/config.yml']
      imagePullPolicy: Never
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          remove: ['ALL']
        readOnlyRootFilesystem: true
      volumeMounts:
      - name: docker-auth-config
        mountPath: /config.yml
        readOnly: true
      - name: pki
        mountPath: /etc/metalk8s/repository/pki
        readOnly: true
      ports:
      - name: http
        containerPort: 5001
      livenessProbe:
        httpGet:
          host: '127.0.0.1'
          port: http
          path: /
      readinessProbe:
        httpGet:
          host: '127.0.0.1'
          port: http
          path: /
  volumes:
    - name: nginx-config
      hostPath:
        path: '{{ repository__config }}/nginx.conf'
        type: File
    - name: nginx-cache
      emptyDir:
    - name: nginx-run
      emptyDir:
        medium: Memory
    - name: nginx-data
      hostPath:
        path: '{{ repository__data }}/www-data'
        type: Directory
    - name: registry-config
      hostPath:
        path: '{{ repository__config }}/registry.yml'
        type: File
    - name: registry-data
      hostPath:
        path: '{{ repository__data }}/registry'
        type: Directory
    - name: docker-auth-config
      hostPath:
        path: '{{ repository__config }}/docker_auth.yml'
        type: File
    - name: pki
      hostPath:
        path: '{{ repository__config }}/pki'
        type: Directory
