- name: 'install prometheus-operator'
  command: >-
    helm upgrade prometheus-operator
    --install {{ prometheus_operator_release_name }}
    --repo {{ prometheus_operator_repo }}
    --version {{ prometheus_operator_version }}
    --namespace {{ prometheus_operator_namespace }}
  run_once: True
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'create tempfile for kube-prometheus values'
  tempfile:
    state: file
    suffix: yml
  register: kube_prometheus_value_files
  run_once: True
  delegate_to: "{{ groups['kube-master'][0] }}"
  with_items:
    - additionnal_dashboard.yml
    - prometheus_values.yml

- debug:
    var: kube_prometheus_value_file
  when: debug|bool
  run_once: True
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'copy kube-prometheus values into temporary file'
  copy:
    src: '{{ item.item }}'
    dest: '{{ item.path }}'
  with_items: '{{ kube_prometheus_value_files.results|default([]) }}'
  run_once: True
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'install kube-prometheus'
  command: >-
    helm upgrade kube-prometheus
    --install {{ kube_prometheus_release_name }}
    --repo {{ kube_prometheus_repo }}
    --version {{ kube_prometheus_version }}
    --namespace {{ kube_prometheus_namespace }}
    {% for value_files in kube_prometheus_value_files.results|default([]) %}
    -f {{ value_files.path }}
    {% endfor %}
  run_once: True
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'remove unneeded kube-prometheus values file'
  file:
    dest: '{{ item.path }}'
    state: absent
  with_items: '{{ kube_prometheus_value_files.results|default([]) }}'
  when: remove_metal_k8s_temporary_file|bool
  run_once: True
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 'create prometheus addons dir'
  file:
    path: '{{ prometheus_addon_dir }}'
    owner: root
    group: root
    mode: 0755
    recurse: true
    state: directory

- name: 'Create prometheus manifests'
  copy:
    src: '{{ item }}'
    dest: '{{ prometheus_addon_dir }}/{{ item }}'
  register: prometheus_manifests
  with_items:
    - grafana_ingress.yml

- name: 'Apply manifests for prometheus'
  kube:
    kubectl: '{{ bin_dir }}/kubectl'
    filename: '{{ prometheus_addon_dir }}/{{ item }}'
    namespace: '{{ prometheus_operator_namespace }}'
    state: 'latest'
  run_once: True
  with_items: >-
    {{ prometheus_manifests.results|default([])|map(attribute="item")|list }}
